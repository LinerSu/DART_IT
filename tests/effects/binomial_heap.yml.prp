(* 
 * To prove that insert operation runs in O(1) amortized cost, the physicist method use a potential defined 
 * as the number of elements in the heap. Then, the insert operation of a binomial heap  
 * decreases the potential with the number of carried(linked) elements, which approximately describes the number of
 * recursive calls the insert operation takes. 
 * 
 * events: link(1); remove(2); append(3)
 * 
 * Automaton property:
 * (q0)--[v;size:=v]-->(q1)
 * (q1)--[link;carries++]-->(q1)
 * (q1)--[remove;size--]-->(q1)
 * (q1)--[append;size++]-->(q2)
 *)

QSet = [0;1;2;3];
 
delta = fun evx (q, (carries, size)) ->
          if (q = 0) then (1, (carries, evx)) 
      	  else if (q = 1 && evx = 1) then (q, (carries+1, size))
	  else if (q = 1 && evx = 2) then (q, (carries, size-1))
	  else if (q = 1 && evx = 3) then (2, (carries, size+1))
	  else (3, (carries,size));

IniCfg = (0, (0, 0));

assert = fun (q, (carries, size)) -> q < 3;

assertFinal = fun (q, (carries, size)) -> size = prefh - carries + 1;  

